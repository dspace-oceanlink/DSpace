<?xml version="1.0" encoding="UTF-8"?>
<!--

    The contents of this file are subject to the license and copyright
    detailed in the LICENSE and NOTICE files at the root of the source
    tree and available online at

    http://www.dspace.org/license/

-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-2.5.xsd"
       default-autowire-candidates="*Service,*Provider,*DAO,javax.sql.DataSource,SesameIndexingServiceImpl">

    <context:annotation-config /> <!-- allows us to use spring annotations in beans -->

    <bean id="org.dspace.app.sesame.SesameIndexingService" class="org.dspace.app.sesame.SesameIndexingServiceImpl"/>

    <bean id="oceanLinkSesameProvider"  class="org.dspace.adapters.DSpaceRepositoryProvider">
        <constructor-arg ref="org.dspace.services.ConfigurationService"/>
        <constructor-arg ref="org.dspace.services.RequestService"/>
        <property name="manager">
            <bean class="org.openrdf.repository.manager.RemoteRepositoryManager">
                <constructor-arg value="${dspace.url}/sesame"/>
            </bean>
        </property>
        <property name="config">
            <bean class="org.openrdf.repository.config.RepositoryConfig">
                <constructor-arg value="dspace"/>
                <constructor-arg>
                    <!--
                    Alternative Sail Configurations May be Created and Configured at this point
                    Examples would include, Memory Sail, Native Sail, RDBMS Sail, Virtuoso Sail
                    -->
                    <bean class="org.openrdf.repository.sail.config.SailRepositoryConfig">
                        <constructor-arg>
                            <bean class="org.openrdf.sail.memory.config.MemoryStoreConfig"/>
                        </constructor-arg>
                    </bean>
                </constructor-arg>
            </bean>
        </property>
        <property name="adapters">
            <list>
                <bean class="org.dspace.adapters.oceanlink.OLBitstreamAdapter"/>
                <bean class="org.dspace.adapters.oceanlink.OLBundleAdapter"/>
                <bean class="org.dspace.adapters.oceanlink.OLItemAdapter"/>
                <bean class="org.dspace.adapters.oceanlink.OLCollectionAdapter"/>
                <bean class="org.dspace.adapters.oceanlink.OLCommunityAdapter"/>
                <bean class="org.dspace.adapters.oceanlink.OLSiteAdapter">
                    <property name="title" value="${dspace.name} Ocean Link Dataset"/>
                    <property name="description" value="RDF data extracted from ${dspace.name} for OceanLink"/>
                    <property name="creator" value="${dspace.name}"/>
                    <property name="homepage" value="${dspace.url}"/>
                    <property name="sparqlEndPoint" value="${dspace.url}/sesame/repositories/dspace"/>
                </bean>
            </list>
            <!--
            Example of alternative list of adapters that change the format of the RDF output by the Consumer
            <list>
                <bean class="org.dspace.adapters.dspace.DSpaceBitstreamAdapter"/>
                <bean class="org.dspace.adapters.dspace.DSpaceBundleAdapter"/>
                <bean class="org.dspace.adapters.dspace.DSpaceItemAdapter"/>
                <bean class="org.dspace.adapters.dspace.DSpaceCollectionAdapter"/>
                <bean class="org.dspace.adapters.dspace.DSpaceCommunityAdapter"/>
                <bean class="org.dspace.adapters.dspace.DSpaceSiteAdapter"/>
            </list>
            -->
        </property>
    </bean>

</beans>
